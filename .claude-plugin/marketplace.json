{
  "name": "claude-code-marketplace",
  "description": "A curated collection of Claude Code plugins for plugin development, context optimization, and productivity tools",
  "owner": {
    "name": "Josiah Siegel",
    "email": "JosiahSiegel@users.noreply.github.com"
  },
  "plugins": [
    {
      "name": "context-master",
      "source": "./plugins/context-master",
      "description": "Universal context management and planning system. PROACTIVELY activate for: (1) ANY complex task requiring planning, (2) Multi-file projects/websites/apps, (3) Architecture decisions, (4) Research tasks, (5) Refactoring, (6) Long coding sessions, (7) Tasks with 3+ sequential steps. Provides: optimal file creation order, context-efficient workflows, extended thinking delegation (23x context efficiency), Claude Sonnet 4.5 token budgeting, recursive delegation patterns, clear-and-verify production workflows, passive deep analysis architecture, progressive task decomposition, and prevents redundant work. Saves 62% context on average.",
      "version": "2.1.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "planning",
        "context",
        "strategy",
        "workflow",
        "thinking",
        "decision",
        "research",
        "refactoring",
        "optimization",
        "session"
      ]
    },
    {
      "name": "plugin-master",
      "source": "./plugins/plugin-master",
      "description": "Complete Claude Code plugin development system for 2025. PROACTIVELY activate when users want to: (1) Create/build/make plugins with 2025 features, (2) Add Agent Skills/commands/agents/hooks, (3) Test and validate plugins, (4) Configure repository-level plugin distribution, (5) Implement MCP server integration, (6) Setup automated workflows with hooks, (7) Publish to marketplace, (8) Get plugin development guidance. Autonomously creates production-ready plugins with: plugin.json manifest, slash commands, specialized agents, Agent Skills (progressive disclosure, unbounded capacity), hooks (nine event types), MCP servers, testing automation, repository configuration (.claude/settings.json), comprehensive README. Uses evaluation-driven development and structural scalability patterns. ALWAYS fetches latest official documentation.",
      "version": "2.1.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "plugin",
        "agentskills",
        "hooks",
        "mcp",
        "command",
        "agent",
        "marketplace",
        "publish",
        "repository",
        "automation"
      ]
    },
    {
      "name": "bash-master",
      "source": "./plugins/bash-master",
      "description": "Expert bash/shell scripting system across ALL platforms with Bash 5.3 and 2025 security-first practices. PROACTIVELY activate for: (1) ANY bash/shell script task, (2) Bash 5.3 features (${ } in-shell substitution, ${| } REPLY syntax, BASH_TRAPSIG), (3) Security-first patterns (60%+ exploits from poor validation, HISTFILE protection, absolute paths), (4) ShellCheck v0.11.0 validation (non-negotiable, POSIX.1-2024), (5) Modern automation (containers/CI/CD/cloud), (6) Scripts under 50 lines (Google Style), (7) Comprehensive debugging (tracing, profiling, breakpoints), (8) Git hooks and pipeline integration, (9) Container-aware scripting, (10) DevOps/deployment automation. Provides: Bash 5.3 complete features (BASH_TRAPSIG, C23 conformance), ShellCheck v0.11.0 (SC2327/SC2328/SC2294/SC2295), security-first mandatory validation patterns, debugging/troubleshooting techniques, container/Kubernetes detection, cloud provider helpers (AWS/Azure), CI/CD platform integration (GitHub Actions/Azure DevOps), parallel processing patterns, blue-green/canary deployments, Google Shell Style Guide compliance, cross-platform compatibility (Linux/macOS/Windows/containers), POSIX.1-2024 compliance, and production-ready 2025 patterns. Ensures secure, optimized, cloud-native scripts following latest 2025 standards.",
      "version": "1.4.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "bash",
        "bash53",
        "shell",
        "script",
        "automation",
        "security",
        "devops",
        "shellcheck",
        "posix",
        "crossplatform",
        "cicd",
        "deployment",
        "container",
        "kubernetes",
        "cloud",
        "debugging",
        "troubleshooting"
      ]
    },
    {
      "name": "git-master",
      "source": "./plugins/git-master",
      "description": "Complete Git expertise for ALL operations with 2025 features (Git 2.49+, GitHub CLI 2.x). PROACTIVELY activate for: (1) ANY Git task, (2) Git 2.49+ features (git-backfill, path-walk API, reftables, sparse-checkout, worktrees), (3) Security (signed commits, zero-trust, secret scanning, CodeQL), (4) Trunk-Based Development, (5) GitHub CLI 2.x (Copilot CLI, model evaluations), (6) GitHub Actions 2025 (1 vCPU runners, immutable releases), (7) Modern workflows (monorepo, parallel development), (8) History rewriting/recovery. Provides: Git 2.49 git-backfill for partial clones, path-walk API, reftables migration, sparse-checkout (90% space reduction), worktrees, GitHub Copilot CLI, gh models eval, zero-trust security, signed commits (GPG/SSH), GitHub Actions 2025 features, automatic backups, safety guardrails, reflog recovery.",
      "version": "1.4.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "git",
        "git-2.49",
        "vcs",
        "version-control",
        "github",
        "github-cli",
        "copilot-cli",
        "security",
        "signed-commits",
        "secret-scanning",
        "sparse-checkout",
        "partial-clone",
        "worktrees",
        "git-backfill",
        "path-walk",
        "azdo",
        "bitbucket",
        "gitlab",
        "workflow",
        "rebase",
        "recovery",
        "monorepo",
        "trunk-based-development",
        "zero-trust"
      ]
    },
    {
      "name": "docker-master",
      "source": "./plugins/docker-master",
      "description": "Complete Docker expertise system across ALL platforms (Windows/Linux/macOS) with 2025 AI-powered features. PROACTIVELY activate for: (1) ANY Docker task (build/run/debug/optimize/registry/network), (2) Docker AI Assistant (Project Gordon) usage, (3) Dockerfile creation/review, (4) Docker Engine 28 features (image mounts, debug endpoints), (5) Docker Desktop 4.47+ (MCP Catalog, Model Runner, silent updates), (6) Docker Compose v2.40.3+ multi-container apps, (7) Compose Bridge (Kubernetes conversion), (8) Container security with Enhanced Container Isolation (ECI), (9) SBOM generation and supply chain protection, (10) Micro-distro base images (Wolfi/Chainguard), (11) Container registry operations, (12) Advanced networking. Provides: Docker AI (Project Gordon), Enhanced Container Isolation (ECI), Engine 28 features (--mount type=image), Desktop 4.47+ capabilities, Model Runner improvements, Compose v2.40.3+ updates, Compose Bridge, registry management, network deep-dive, 2025 best practices with micro-distros, SBOM generation, BuildKit attestation warnings (unsigned), CIS Docker Benchmark v1.7.0, multi-stage builds, security hardening, image optimization, platform-specific guidance, Docker Scout/Trivy integration, and systematic debugging.",
      "version": "1.4.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "docker",
        "container",
        "dockerfile",
        "compose",
        "engine28",
        "registry",
        "network",
        "containerize",
        "production",
        "security",
        "optimize",
        "debug",
        "deploy",
        "kubernetes"
      ]
    },
    {
      "name": "ado-master",
      "source": "./plugins/ado-master",
      "description": "Complete Azure DevOps and Azure Pipelines expertise system with Sprint 254-262 features (2025). PROACTIVELY activate for: (1) ANY Azure DevOps/Pipelines task, (2) YAML pipeline creation/editing, (3) Workload identity federation (OIDC) passwordless authentication, (4) Pipeline performance analytics and monitoring, (5) Pipeline debugging/troubleshooting, (6) CI/CD optimization, (7) Security/compliance implementation, (8) Azure DevOps CLI operations, (9) Template management, (10) Microsoft Security DevOps integration. Provides: workload identity setup and migration, pipeline performance analytics and cost tracking, latest YAML schema (always researches current docs), Microsoft best practices, multi-stage pipeline patterns, caching/parallelization, Azure Key Vault integration, code scanning (SAST/dependency/container/IaC/secrets), deployment strategies, performance optimization, and systematic debugging.",
      "version": "1.4.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "ado",
        "azdo",
        "azurepipelines",
        "azuredevops",
        "yaml",
        "pipeline",
        "cicd",
        "microsoft",
        "azure",
        "devops",
        "security",
        "oidc",
        "workload-identity",
        "analytics",
        "performance"
      ]
    },
    {
      "name": "test-master",
      "source": "./plugins/test-master",
      "description": "Complete Vitest 4.0 Playwright 1.55 MSW 2.x testing system. PROACTIVELY activate for: (1) ANY testing task (unit/integration/E2E/visual), (2) Test creation and scaffolding, (3) AI-powered test generation (Playwright agents), (4) Test debugging and failure analysis, (5) Coverage analysis and optimization, (6) Visual regression testing, (7) MSW mock management, (8) Test configuration (Vitest/Playwright), (9) CI/CD test setup, (10) Multi-project test architecture. Provides: Vitest 4.0 stable browser mode, visual regression testing, Playwright 1.55 AI test agents, intelligent test running, auto-scaffolding with boilerplate, MSW 2.11+ handler generation, coverage gap analysis, Playwright trace debugging with titlePath, advanced snapshot management, parallel execution optimization, and comprehensive test infrastructure setup. Ensures production-ready testing with latest 2025 patterns across all modern JavaScript projects.",
      "version": "1.5.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "testing",
        "vitest",
        "playwright",
        "e2e",
        "msw",
        "mock",
        "coverage",
        "debug",
        "integration",
        "unit"
      ]
    },
    {
      "name": "powershell-master",
      "source": "./plugins/powershell-master",
      "description": "Complete PowerShell expertise system across ALL platforms (Windows/Linux/macOS). PROACTIVELY activate for: (1) ANY PowerShell task (scripts/modules/cmdlets), (2) CI/CD automation (GitHub Actions/Azure DevOps/Bitbucket), (3) Cross-platform scripting, (4) Module discovery and management (PSGallery), (5) Azure/AWS/Microsoft 365 automation, (6) Script debugging and optimization, (7) Best practices and security. Provides: PowerShell 7+ features, popular module expertise (Az, Microsoft.Graph, PnP, AWS Tools), PSGallery integration, platform-specific guidance, CI/CD pipeline patterns, cmdlet syntax mastery, and production-ready scripting patterns.",
      "version": "1.4.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "powershell",
        "pwsh",
        "script",
        "automation",
        "cicd",
        "azure",
        "modules",
        "psgallery",
        "crossplatform",
        "devops"
      ]
    },
    {
      "name": "terraform-master",
      "source": "./plugins/terraform-master",
      "description": "Complete Terraform expertise system for all cloud providers (Azure, AWS, Google Cloud) and platforms. PROACTIVELY activate for: (1) ANY Terraform task (init/plan/apply/validate), (2) Infrastructure-as-code design, (3) Resource import and state management, (4) Multi-environment architectures, (5) CI/CD pipeline integration, (6) Security scanning and best practices, (7) Version-aware code generation, (8) CLI mastery with -chdir and all flags. Provides: comprehensive provider knowledge (AzureRM/AWS/GCP/community), version-aware implementations, state operations (mv/rm/import), bulk import strategies (Terraformer/aztfexport), security scanning (tfsec/Checkov), enterprise architecture patterns, complete CLI reference, and platform-specific guidance (Windows/Linux/macOS).",
      "version": "1.6.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "terraform",
        "infrastructure",
        "iac",
        "azure",
        "aws",
        "gcp",
        "cloud",
        "devops",
        "cicd",
        "automation",
        "providers",
        "modules",
        "import",
        "state",
        "cli"
      ]
    },
    {
      "name": "ssdt-master",
      "source": "./plugins/ssdt-master",
      "description": "Complete SQL Server Data Tools (SSDT) expertise system across ALL platforms. PROACTIVELY activate for: (1) ANY SSDT task (database projects/SqlPackage/schema compare), (2) SDK-style and legacy database project creation/migration, (3) DACPAC/BACPAC build and deployment operations, (4) SqlPackage command-line operations (publish/extract/export/import), (5) Schema and data comparison workflows, (6) Database refactoring operations (rename/schema changes/data transformations), (7) MSBuild integration and CI/CD pipeline setup, (8) Visual Studio database project troubleshooting, (9) Cross-platform CLI tools (dotnet/sqlpackage), (10) Deployment script generation and validation. Provides: comprehensive SqlPackage reference with all actions and parameters, SDK-style project structure expertise, legacy project migration patterns, schema compare functionality, deployment option mastery, refactoring best practices, CI/CD integration patterns (GitHub Actions/Azure DevOps), MSBuild property configuration, and version-specific guidance. Ensures production-ready, secure, efficient database development following Microsoft SQL Server best practices.",
      "version": "1.5.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "sql-server",
        "ssdt",
        "database",
        "dacpac",
        "sqlpackage",
        "schema-compare",
        "database-projects",
        "sql",
        "mssql",
        "sdk-style",
        "visual-studio",
        "azure-sql",
        "deployment",
        "migration"
      ]
    },
    {
      "name": "adf-master",
      "source": "./plugins/adf-master",
      "description": "Complete Azure Data Factory expertise system with STRICT validation enforcement and Microsoft Fabric integration (2025). PROACTIVELY activate for: (1) ANY Azure Data Factory task (pipelines/datasets/triggers/linked services) WITH automatic validation, (2) Microsoft Fabric integration (ADF mounting, cross-workspace orchestration, OneLake connectivity), (3) Activity nesting validation (ForEach/If/Switch/Until limitations), (4) Linked service configuration validation (Blob Storage accountKind, SQL Database auth), (5) CI/CD setup and automation (GitHub Actions/Azure DevOps with Node.js 20.x), (6) ARM template generation and deployment, (7) Pipeline debugging and troubleshooting, (8) Modern npm-based deployments (@microsoft/azure-data-factory-utilities), (9) Performance optimization and best practices, (10) Invoke Pipeline cross-platform orchestration (Fabric/ADF/Synapse), (11) Variable Libraries for multi-environment CI/CD. Provides: comprehensive ADF knowledge with validation enforcement, activity nesting rules (REJECTS prohibited combinations), linked service requirements (Azure Blob, SQL, ADLS, Fabric Lakehouse/Warehouse), resource limit checks (80 activities per pipeline), Execute Pipeline workarounds, common pitfall prevention, CI/CD patterns with 2025 updates, Fabric mounting guidance, Airflow deprecation notices, troubleshooting guides, and production-ready VALIDATED solutions. Ensures ONLY valid, compliant, optimized ADF pipelines with modern Fabric integration capabilities.",
      "version": "3.2.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "adf",
        "datafactory",
        "azure",
        "validation",
        "pipeline",
        "foreach",
        "nested",
        "linkedservice",
        "cicd",
        "deployment",
        "fabric",
        "onelake",
        "warehouse",
        "fabric-integration",
        "invoke-pipeline",
        "variable-libraries",
        "cross-workspace",
        "mounting"
      ]
    },
    {
      "name": "salesforce-master",
      "source": "./plugins/salesforce-master",
      "description": "Complete Salesforce expertise system across ALL platforms and integration scenarios. PROACTIVELY activate for: (1) ANY Salesforce task (API/data/Apex/Lightning/Flow), (2) SOQL/SOSL query design and optimization, (3) REST/SOAP API integration and authentication, (4) Apex development (classes/triggers/batch/scheduled) with Spring '25 features, (5) Lightning Web Components with lightning/graphql module and Aura development, (6) Data model design and schema management (objects/fields/relationships), (7) Integration patterns (source-to-Salesforce, Salesforce-to-target), (8) Deployment and metadata management (change sets/SFDX/CLI), (9) Security model implementation (profiles/permissions/sharing), (10) Flow/Process Builder/Flow Orchestrator automation, (11) Agentforce 2.0 AI agents and autonomous automation, (12) Data Cloud Vector Database with semantic search, (13) Hyperforce public cloud architecture. Provides: comprehensive SFDC object schema knowledge (standard/custom objects, all fields, relationships), complete API reference (REST/SOAP/Bulk/Streaming) for API 63.0/64.0, Apex language mastery with Compression and FormulaEval namespaces (Spring '25 GA), Lightning platform expertise with Winter '26 GraphQL updates and SLDS 2.0 dark mode, SOQL/SOSL optimization, authentication methods (OAuth/JWT/Session), limits and best practices, governor limits handling, integration patterns (ETL/real-time/batch/Data Cloud), metadata API operations, SFDX CLI commands, version-specific guidance, platform event architecture, Agentforce 2.0 development with LLM Open Connector, Data Cloud Vector Database for unstructured data and hybrid search, Flow Orchestrator multi-user workflows, and Hyperforce cloud-native architecture. Ensures production-ready, scalable, secure Salesforce solutions following Spring '25/Summer '25 best practices and Well-Architected Framework.",
      "version": "2.1.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "salesforce",
        "sfdc",
        "apex",
        "soql",
        "lightning",
        "api",
        "crm",
        "integration",
        "metadata",
        "sfdx",
        "flow",
        "data",
        "schema",
        "authentication",
        "deployment",
        "agentforce",
        "ai-agents",
        "data-cloud",
        "hyperforce",
        "flow-orchestrator",
        "vector-database",
        "semantic-search",
        "graphql",
        "compression",
        "formulaeval",
        "slds-2",
        "spring-25",
        "api-63",
        "lwc",
        "2025"
      ]
    },
    {
      "name": "azure-master",
      "source": "./plugins/azure-master",
      "description": "Complete Azure cloud expertise system with 2025 features including AKS Automatic, Container Apps GPU support, and Deployment Stacks. PROACTIVELY activate for: (1) ANY Azure resource provisioning or management, (2) AKS Automatic with Karpenter autoscaling, (3) Container Apps with serverless GPU and Dapr integration, (4) Azure OpenAI GPT-5 and reasoning models (o4-mini, o3), (5) Deployment Stacks for infrastructure lifecycle management, (6) Bicep v0.37+ with externalInput() and custom extensions, (7) Azure CLI 2.79+ with latest breaking changes, (8) SRE Agent integration for monitoring and incident response, (9) Azure AI Foundry model deployment, (10) Security, networking, and cost optimization. Provides: AKS Automatic GA features, Container Apps GPU workloads, Deployment Stacks best practices, latest Azure OpenAI models, Bicep 2025 patterns, Azure CLI expertise, comprehensive service configurations (compute, networking, storage, databases, AI/ML), Well-Architected Framework guidance, high availability patterns, security hardening, cost optimization strategies, and production-ready configurations. Ensures enterprise-ready, secure, scalable Azure infrastructure following Microsoft 2025 standards.",
      "version": "1.0.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "azure",
        "cloud",
        "infrastructure",
        "aks",
        "container-apps",
        "bicep",
        "azure-cli",
        "openai",
        "ai-foundry",
        "deployment-stacks",
        "kubernetes",
        "devops",
        "networking",
        "storage",
        "databases",
        "security",
        "cost-optimization",
        "monitoring",
        "well-architected"
      ]
    },
    {
      "name": "azure-to-docker-master",
      "source": "./plugins/azure-to-docker-master",
      "description": "Complete Azure-to-Docker migration system for local development with 2025 features. PROACTIVELY activate for: (1) ANY Azure-to-Docker migration task, (2) Azure infrastructure extraction and Docker Compose generation, (3) Azure service emulator setup (Azurite 2025-11-05 API, SQL Server 2025 latest, Cosmos DB vnext Linux, Service Bus official emulator), (4) Local development with Docker Compose Watch mode (hot reload), (5) Database export from Azure SQL/PostgreSQL/MySQL to Docker, (6) Dockerfile generation from Azure App Service configurations, (7) Multi-container orchestration with proper networking and dependencies, (8) Production-ready Docker Compose with health checks and runtime secrets, (9) Azure service mapping (App Service/SQL/Storage/Redis/Cosmos/Service Bus), (10) Development-to-production parity with Azure emulators. Provides: Azure resource extraction and analysis, complete Docker Compose generation with 2025 best practices, Azure emulator configuration (Azurite with latest API, SQL Server 2025 with Vector Search, Cosmos DB vnext Linux-based, official Service Bus emulator), Docker Compose Watch mode for hot reload, database export automation, App Service to Dockerfile conversion, service dependency mapping, network isolation patterns, volume management strategies, environment variable templating, health check implementation, resource limit configuration, security hardening (non-root users, read-only filesystems, capability drops, runtime-only secrets), development override patterns with watch mode, and Azure-to-Docker best practices. Ensures production-ready local development environments that mirror Azure infrastructure with instant hot reload capabilities.",
      "version": "1.1.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "azure",
        "docker",
        "migration",
        "compose",
        "emulator",
        "azurite",
        "local-dev",
        "infrastructure",
        "extraction",
        "containerize",
        "sql-server",
        "cosmos",
        "storage",
        "watch-mode",
        "hot-reload",
        "service-bus"
      ]
    },
    {
      "name": "windows-path-master",
      "source": "./plugins/windows-path-master",
      "description": "Windows path resolution and Git Bash compatibility expert for Claude Code. PROACTIVELY activate for: (1) File path errors on Windows (backslash issues), (2) Git Bash MINGW path resolution, (3) Edit/Write tool failures with Windows paths, (4) Cross-platform path conversion, (5) Windows file system navigation in Claude Code, (6) Path format detection and conversion, (7) Windows-specific file operation troubleshooting. Provides: automatic path format detection, backslash conversion guidance, Git Bash compatibility fixes, Windows-specific file operation patterns, MINGW path troubleshooting, real-time path validation, and production-ready Windows file handling. Ensures correct file operations on Windows following Claude Code best practices.",
      "version": "1.0.0",
      "author": {
        "name": "Josiah Siegel"
      },
      "keywords": [
        "windows",
        "path",
        "gitbash",
        "mingw",
        "backslash",
        "pathconversion",
        "windowsfile",
        "claudecode",
        "filepath",
        "crossplatform"
      ]
    }
  ]
}